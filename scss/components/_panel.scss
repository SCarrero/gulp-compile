.panel {
  // background colors are all in backgrounds.scss
  &.offset-feature-panel {
    padding: 2rem 0;
    margin-bottom: 0;
    @include breakpoint(large) {
      padding: 4rem 0;
    }
    .cell {
      padding: rem-calc(0 30);
    }
    @include breakpoint(medium down) {
      .large-6:first-of-type img {
        margin-bottom: 2em;
      }
      &.right-image .large-6:last-of-type img {
        margin-bottom: 2em;
      }
    }
    @include breakpoint(large){
      overflow: visible;
      .large-6 {
        display: flex;
        justify-content: flex-start;
        align-items: center;
      }
    }

    &:not(.right-image) {
      @include breakpoint(large) {
        margin-left: rem-calc(60);
        .grid-x {
          margin-left: rem-calc(-60);
          padding-right: rem-calc(60);
          .large-6:first-of-type {
            padding: 0;
          }
          .large-6:last-of-type {
            padding: rem-calc(0 30 0 80);
          }
        }
      }
      @include breakpoint(xlarge){
        .grid-x {
          .large-6:last-of-type {
            padding: rem-calc(0 50 0 110);
          }
        }
      }
    }
    &.right-image {
      @include breakpoint(large) {
        margin-right: rem-calc(60);
        .grid-x {
          margin-right: rem-calc(-60);
          padding-left: rem-calc(60);
          .large-6:last-of-type {
            padding: 0;
          }
          .large-6:first-of-type {
            padding: rem-calc(0 80 0 30);
          }
        }
      }
      @include breakpoint(xlarge){
        .grid-x {
          .large-6:first-of-type {
            padding: rem-calc(0 110 0 50);
          }
        }
      }
    }
  }
  &.offset-video-panel {
    @include clearfix;
    .cell:first-of-type {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      padding: 3rem;
      :last-child {
        margin-bottom: 0;
      }
      @include breakpoint(large){
        padding: 1.5rem 2.5rem 1.5rem 2rem;
      }
      @include breakpoint(xlarge) {
        padding: 4rem 5rem;
      }
      @include breakpoint(xxlarge) {
        padding: 4rem 7rem 4rem 6rem;
      }
    }
    // .cell:last-of-type {
    //   position: relative;
    //   padding: 0;
    // }
    .background {
      position: relative;
      width: 100%;
      padding-top: 81%;
      background-position: center center;
      background-repeat: no-repeat;
      background-size: cover;
    }
  }
  &.offset-text-image-panel {
    position: relative;
    @include breakpoint(large){
      margin-bottom: rem-calc(map-get($grid-container-padding, large) * 0.5);
      margin-left: rem-calc(map-get($grid-container-padding, large) * 0.5);
    }
    @include breakpoint(xlarge){
      margin-left: rem-calc(map-get($grid-container-padding, xlarge) * 0.5);
      margin-bottom: rem-calc(map-get($grid-container-padding, xlarge) * 0.5);
    }
    @include breakpoint(xxlarge) {
      margin-left: 0;
    }
    .grid-x {
      @include breakpoint(large){
        overflow: visible;
        position: relative;
      }
      @include breakpoint(xlarge) {
        max-width: $grid-container + rem-calc(map-get($grid-container-padding, xlarge));
        margin: 0 auto;
      }
      @include breakpoint(xxlarge) {
        max-width: $grid-container + rem-calc(map-get($grid-container-padding, xxlarge));
      }
    }
    .cell:first-child {
      @each $size, $amt in $grid-container-padding {
        @if($amt >= map-get($grid-container-padding, large)){
          @if $size != $-zf-zero-breakpoint {
            @include breakpoint(#{$size}) {
              left: - rem-calc($amt * 0.5);
              bottom: - rem-calc($amt * 0.5);
              > .callout.large {
                padding-left: rem-calc($amt * 0.5);
              }
            }
          }
        }
      }
      @include breakpoint(large) {
        position: absolute;
        width: 50%;
        z-index: 2;
        @include clearfix;
      }
      @include breakpoint(xlarge) {
        width: 47.5%;
      }
      @include breakpoint(xxlarge) {
        width: 45%;
      }
    }

    .poster {
      position: relative;
      min-width: 100%;
      min-height: 12rem;
      @include breakpoint(large){
        margin-right: rem-calc(- map-get($grid-container-padding, large) * 0.5);
        min-height: rem-calc(600);
      }
      @include breakpoint(xlarge) {
   //     margin-right: rem-calc(- map-get($grid-container-padding, xlarge)/2);
      }
      @include breakpoint(xxlarge) {
    //    margin-right: rem-calc(- map-get($grid-container-padding, xxlarge)/2);
      }
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    .play-button {
      @include breakpoint(large){
        bottom: 4rem;
        right: 4rem;
      }
    }
  }
}
